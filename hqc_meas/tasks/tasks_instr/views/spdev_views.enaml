# -*- coding: utf-8 -*-
#==============================================================================
# module : spdev_views.enaml
# author : Matthieu Dartiailh
# license : MIT license
#==============================================================================
from enaml.core.api import Conditional, Include
from enaml.widgets.api import (GroupBox, Label, Field, ObjectCombo, CheckBox, Container)
from enaml.layout.api import grid, vbox, hbox, factory

from inspect import cleandoc
from textwrap import fill

from hqc_meas.utils.widgets.qt_line_completer import QtLineCompleter
from hqc_meas.utils.layouts import auto_grid_layout
from hqc_meas.tasks.views.base_instr_view import BaseInstrumentView
from hqc_meas.tasks.tools.string_evaluation import EVALUATER_TOOLTIP


enamldef DemodSpView(BaseInstrumentView): view:

    title << task.task_name
    constraints = [vbox(
                    grid([sel_driv, sel_prof, traces, after, duration],
                         [sel_val, prof_val, traces_val, after_val,
                          duration_val]),
                    hbox(demod1,demod2),
                    demod1.width == demod2.width]

    Label: sel_driv:
        text = 'Driver'
    ObjectCombo: sel_val:
        items << sorted(drivers)
        selected := task.selected_driver

    Label: sel_prof:
        text = 'Instr'
    ObjectCombo: prof_val:
        items << sorted(profiles)
        selected := task.selected_profile

    Label: traces:
        text = 'Number of traces'
    QtLineCompleter: traces_val:
        text := task.tracesnumber
        entries_updater << task.accessible_database_entries
        tool_tip = EVALUATER_TOOLTIP

    Label: after:
            text = 'Start time after trigger (ns)'
    QtLineCompleter: after_val:
        text := task.timeaftertrig
        entries_updater << task.accessible_database_entries
        tool_tip = EVALUATER_TOOLTIP

    Label: duration:
        text = 'Duration (ns)'
    QtLineCompleter: duration_val:
        text := task.duration
        entries_updater << task.accessible_database_entries
        tool_tip = EVALUATER_TOOLTIP

    GroupBox: demod1:
        title = 'Channel 1 demodulation settings'
        constraints = [hbox(dfreq1, dfreq1_val)]
        Label: dfreq1:
            text = 'Demodulation frequency (MHz)'
        Field: dfreq1_val:
            text := task.freq_1

    GroupBox: demod2:
        title = 'Channel 2 demodulation settings'
        constraints = [hbox(dfreq2, dfreq2_val)]
        Label: dfreq2:
            text = 'Demodulation frequency (MHz)'
        Field: dfreq2_val:
            text := task.freq_2


TASK_VIEW_MAPPING = {'DemodSPTask': DemodSpView}
